<?xml version="1.0"?>
<!-- ==================================================================== -->
<!-- ==================== ROBOTINO 4 - FestXarmKeshi ==================== -->
<!-- ==================== PUMAS - Biorobotics Lab    ==================== -->
<!-- ==================================================================== -->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robotino">
  
  <!-- ==================== Includes ==================== -->
  <xacro:include filename="$(find xarm_description)/urdf/xarm6/xarm6.urdf.xacro"/>
  <xacro:include filename="$(find xarm_description)/urdf/xarm_device_macro.xacro" />
  

  <!-- ==================== Properties ==================== -->
  <xacro:property name="mesh_scale" value="0.01 0.01 0.01"/>
  <xacro:property name="wheel_mesh" value="package://robotino_description/model/Robotino3_SplitWheel.dae"/>
  <xacro:property name="body_mesh" value="package://robotino_description/model/Robotino3_SplitMain_NoCamera.dae"/>
  <xacro:property name="tower_mesh" value="package://robotino_description/model/Robotino3_Platform-xarm.dae"/>
  <xacro:property name="hokuyo_mesh" value="package://robotino_description/meshes/sensors/hokuyo.dae"/>
  <xacro:property name="kinect_mesh" value="package://robotino_description/meshes/sensors/kinect.dae"/>

  <!-- ==================== Macros ==================== -->
  <xacro:macro name="wheel_link" params="index xyz rpy">
    <link name="wheel${index}_link">
      <inertial>
        <mass value="1.0"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0.01" iyy="0.01" izz="0.01" ixy="0" ixz="0" iyz="0"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${wheel_mesh}" scale="${mesh_scale}"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="${wheel_mesh}" scale="${mesh_scale}"/>
        </geometry>
      </collision>
    </link>
    <joint name="wheel${index}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="wheel${index}_link"/>
      <origin xyz="${xyz}" rpy="${rpy}"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

 <!-- ==================== Base ==================== -->
<link name="base_link">
  <inertial>
    <origin xyz="0 0 0.03" rpy="0 0 0"/>
    <mass value="35.0"/>
    <inertia ixx="1.0" iyy="1.0" izz="1.0" ixy="0.0" ixz="0.0" iyz="0.0"/>
  </inertial>

  <visual>
    <origin xyz="0 0 0.035" rpy="0 0 1.5707"/>
    <geometry>
      <mesh filename="${body_mesh}" scale="${mesh_scale}"/>
    </geometry>
  </visual>

  <!-- 🔁 Keep mesh collision if you want accurate visuals -->
  <collision>
    <origin xyz="0 0 0.035" rpy="0 0 1.5707"/>
    <geometry>
      <mesh filename="${body_mesh}" scale="${mesh_scale}"/>
    </geometry>
  </collision>

  <!-- ✅ Add simplified collision shape for Gazebo physics -->
  <collision>
    <origin xyz="0 0 0.03" rpy="0 0 0"/>
    <geometry>
      <box size="0.4 0.4 0.06"/>
    </geometry>
  </collision>
</link>

  <!-- ==================== Wheels ==================== -->
  <xacro:wheel_link index="0" xyz="-0.1825 -0.0001 0.059154" rpy="0 0 1.570796"/>
  <xacro:wheel_link index="1" xyz="0.090625 -0.157067 0.059154" rpy="0 0 3.665191"/>
  <xacro:wheel_link index="2" xyz="0.090625 0.156867 0.059154" rpy="0 0 -0.523599"/>

  <!-- ==================== Tower (Platform) ==================== -->
  <link name="platform_link">
    <visual>
      <origin xyz="0 0 -0.70" rpy="0 0 1.5707"/>
      <geometry>
        <mesh filename="${tower_mesh}" scale="0.009 0.009 0.009"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 -0.70" rpy="0 0 1.5707"/>
      <geometry>
        <mesh filename="${tower_mesh}" scale="0.009 0.009 0.009"/>
      </geometry>
    </collision>
  </link>

  <joint name="platform_joint" type="fixed">
    <parent link="base_link"/>
    <child link="platform_link"/>
    <origin xyz="0 0 0.455" rpy="0 0 0"/>
  </joint>

  <!-- ==================== Laser Sensor ==================== -->
  <link name="laser_link">
    <visual>
      <origin xyz="0 0 -0.055" rpy="0 0 1.57"/>
      <geometry>
        <mesh filename="${hokuyo_mesh}" scale="${mesh_scale}"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 -0.055" rpy="0 0 1.57"/>
      <geometry>
        <mesh filename="${hokuyo_mesh}" scale="${mesh_scale}"/>
      </geometry>
    </collision>
  </link>

  <joint name="base_to_laser" type="fixed">
    <parent link="base_link"/>
    <child link="laser_link"/>
    <origin xyz="0.07 0.0 0.28" rpy="0 0 0"/>
  </joint>

  <!-- ==================== Manipulator (XArm) ==================== -->
  <xacro:arg name="prefix" default=""/>
  <xacro:arg name="hw_ns" default="xarm"/>
  <xacro:arg name="limited" default="false"/>
  <xacro:arg name="effort_control" default="false"/>
  <xacro:arg name="velocity_control" default="false"/>
  <xacro:arg name="add_gripper" default="false"/>
  <xacro:arg name="add_vacuum_gripper" default="false"/>
  <xacro:arg name="add_bio_gripper" default="false"/>
  <xacro:arg name="model1300" default="false"/>
  <xacro:arg name="dof" default="6"/>
  <xacro:arg name="robot_ip" default="192.168.1.212"/>
  <xacro:arg name="robot_type" default="xarm"/>
  <xacro:arg name="robot_sn" default=""/>
  <xacro:arg name="report_type" default="normal"/>
  <xacro:arg name="ros2_control_plugin" default="uf_robot_hardware/UFRobotSystemHardware"/>
  <xacro:arg name="ros2_control_params" default=""/>
  <xacro:arg name="add_realsense_d435i" default="false"/>
  <xacro:arg name="add_d435i_links" default="false"/>
  <xacro:arg name="use_gazebo_camera" default="false"/>
  <xacro:arg name="add_other_geometry" default="false"/>
  <xacro:arg name="geometry_type" default="box"/>
  <xacro:arg name="geometry_mass" default="0.1"/>
  <xacro:arg name="geometry_height" default="0.1"/>
  <xacro:arg name="geometry_radius" default="0.1"/>
  <xacro:arg name="geometry_length" default="0.1"/>
  <xacro:arg name="geometry_width" default="0.1"/>
  <xacro:arg name="geometry_mesh_filename" default=""/>
  <xacro:arg name="geometry_mesh_origin_xyz" default="0 0 0"/>
  <xacro:arg name="geometry_mesh_origin_rpy" default="0 0 0"/>
  <xacro:arg name="geometry_mesh_tcp_xyz" default="0 0 0"/>
  <xacro:arg name="geometry_mesh_tcp_rpy" default="0 0 0"/>
  <xacro:arg name="baud_checkset" default="true"/>
  <xacro:arg name="default_gripper_baud" default="2000000"/>
  <xacro:arg name="attach_to" default="platform_link"/>
  <xacro:arg name="attach_xyz" default="0.0 0.0 0.0"/>
  <xacro:arg name="attach_rpy" default="0 0 -1.047"/>
  <xacro:arg name="mesh_suffix" default="stl"/>
  <xacro:arg name="kinematics_suffix" default=""/>

  <xacro:xarm_device 
    prefix="$(arg prefix)" 
    hw_ns="$(arg hw_ns)" 
    limited="$(arg limited)" 
    effort_control="$(arg effort_control)" 
    velocity_control="$(arg velocity_control)"
    add_gripper="$(arg add_gripper)" 
    add_vacuum_gripper="$(arg add_vacuum_gripper)" 
    add_bio_gripper="$(arg add_bio_gripper)" 
    dof="$(arg dof)" 
    ros2_control_plugin="$(arg ros2_control_plugin)" 
    robot_type="$(arg robot_type)" 
    load_gazebo_plugin="true" 
    ros2_control_params="$(arg ros2_control_params)"
    add_realsense_d435i="$(arg add_realsense_d435i)" 
    add_d435i_links="$(arg add_d435i_links)" 
    add_other_geometry="$(arg add_other_geometry)" 
    geometry_type="$(arg geometry_type)" 
    geometry_mass="$(arg geometry_mass)"
    geometry_height="$(arg geometry_height)" 
    geometry_radius="$(arg geometry_radius)"
    geometry_length="$(arg geometry_length)" 
    geometry_width="$(arg geometry_width)"
    geometry_mesh_filename="$(arg geometry_mesh_filename)"
    geometry_mesh_origin_xyz="$(arg geometry_mesh_origin_xyz)" 
    geometry_mesh_origin_rpy="$(arg geometry_mesh_origin_rpy)"
    geometry_mesh_tcp_xyz="$(arg geometry_mesh_tcp_xyz)" 
    geometry_mesh_tcp_rpy="$(arg geometry_mesh_tcp_rpy)"
    robot_ip="$(arg robot_ip)" 
    report_type="$(arg report_type)"
    baud_checkset="$(arg baud_checkset)" 
    default_gripper_baud="$(arg default_gripper_baud)"
    model1300="$(arg model1300)" 
    attach_to="$(arg attach_to)" 
    attach_xyz="$(arg attach_xyz)" 
    attach_rpy="$(arg attach_rpy)"
    robot_sn="$(arg robot_sn)" 
    use_gazebo_camera="$(arg use_gazebo_camera)" 
    mesh_suffix="$(arg mesh_suffix)" 
    kinematics_suffix="$(arg kinematics_suffix)"
  />

  <!-- ==================== Kinect Sensor ==================== -->
  <link name="camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 1.57"/>
      <geometry>
        <mesh filename="${kinect_mesh}" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 1.57"/>
      <geometry>
        <mesh filename="${kinect_mesh}" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>

  <joint name="platform_to_camera" type="fixed">
    <parent link="link5"/>
    <child link="camera_link"/> 
    <origin xyz="0.15 0.035 0.0" rpy="1.5707 0 1.5707"/>
  </joint>

  <!-- ==================== Gazebo Plugins ==================== -->
  <gazebo>
    <plugin name="pumas_base_controller" filename="libgazebo_ros_planar_move.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>50</odometryRate>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>

   
  </gazebo>

 <gazebo reference="laser_link">
  <sensor type="ray" name="hokuyo_laser">
    <plugin name="gazebo_ros_laser" filename="libgazebo_ros_laser.so">
      <!-- Key fix: Add Gazebo ROS namespace configuration -->
      <gazebo_ros>
        <namespace>/</namespace>  <!-- Forces root namespace -->
        <remapping>~/out:=scan</remapping>
      </gazebo_ros>
      
      <!-- Standard parameters -->
      <topicName>/scan</topicName>
      <frameName>laser_link</frameName>
      <radiationType>infrared</radiationType>
      <alwaysOn>true</alwaysOn>
    </plugin>
    
    <!-- Keep your existing ray/sensor parameters -->
    <pose>0 0 0 0 0 0</pose>
    <visualize>true</visualize>
    <update_rate>40</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>720</samples>
          <resolution>1</resolution>
          <min_angle>-1.5708</min_angle>
          <max_angle>1.5708</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.10</min>
        <max>30.0</max>
        <resolution>0.01</resolution>
      </range>
    </ray>
  </sensor>
</gazebo>


<gazebo reference="camera_link">
  <sensor type="depth" name="kinect_sensor">
    <always_on>true</always_on>
    <update_rate>30</update_rate>
    <visualize>true</visualize>
    
    <camera>
      <horizontal_fov>1.0472</horizontal_fov>  <!-- 60° FOV -->
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <depth_near>0.1</depth_near>
      <depth_far>10.0</depth_far>
    </camera>

    <plugin name="kinect_controller" filename="libgazebo_ros_openni_kinect.so">
      <topicName>/kinect/depth</topicName>      <!-- Depth topic -->
      <frameName>camera_link</frameName>        <!-- Must match your link -->
      <baseline>0.1</baseline>                  <!-- IR baseline in meters -->
      <alwaysOn>true</alwaysOn>
      <updateRate>30</updateRate>
      <pointCloudCutoff>0.5</pointCloudCutoff>  <!-- Min range -->
      <pointCloudCutoffMax>10.0</pointCloudCutoffMax> <!-- Max range -->
      <distortionK1>0.0</distortionK1>
      <distortionK2>0.0</distortionK2>
      <distortionK3>0.0</distortionK3>
      <distortionT1>0.0</distortionT1>
      <distortionT2>0.0</distortionT2>
      <CxPrime>0.0</CxPrime>
      <Cx>0.0</Cx>
      <Cy>0.0</Cy>
      <focalLength>0.0</focalLength>
      <hackBaseline>0.0</hackBaseline>
    </plugin>
  </sensor>
</gazebo>

</robot>
